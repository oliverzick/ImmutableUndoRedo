{"name":"ImmutableUndoredo","tagline":"A lightweight, flexible and easy to use do/undo/redo implementation based on immutable objects for .NET.","body":"# ImmutableUndoRedo\r\nA lightweight, flexible and easy to use do/undo/redo implementation based on immutable objects for .NET.\r\n\r\n# Getting started\r\nTo install ImmutableUndoRedo run the following command from the [Package Manager Console](http://docs.nuget.org/docs/start-here/using-the-package-manager-console):\r\n\r\n    PM> install-package ImmutableUndoRedo\r\n\r\n# Sample\r\n## Event implementation\r\n\r\n    struct Event : IEvent\r\n    {\r\n        private readonly int id;\r\n\r\n        private readonly int totalDo;\r\n\r\n        private readonly int totalUndo;\r\n\r\n        public Event(int id)\r\n            : this()\r\n        {\r\n            this.id = id;\r\n        }\r\n\r\n        private Event(int id, int totalDo, int totalUndo)\r\n            : this(id)\r\n        {\r\n            this.totalDo = totalDo;\r\n            this.totalUndo = totalUndo;\r\n        }\r\n\r\n        public IEvent Do()\r\n        {\r\n            Console.WriteLine(\"Do   event #{0} (total 'Do': {1} | total 'Undo': {2})\", this.id, this.totalDo + 1, this.totalUndo);\r\n\r\n            return new Event(this.id, this.totalDo + 1, this.totalUndo);\r\n        }\r\n\r\n        public IEvent Undo()\r\n        {\r\n            Console.WriteLine(\"Undo event #{0} (total 'Do': {1} | total 'Undo': {2})\", this.id, this.totalDo, this.totalUndo + 1);\r\n\r\n            return new Event(this.id, this.totalDo, this.totalUndo + 1);\r\n        }\r\n    }\r\n\r\n## Use of the History class\r\n\r\n    static void Main(string[] args)\r\n    {\r\n        // Create history instance without any done or undone events\r\n        var history = History.CreateEmpty();\r\n\r\n        // Current history:\r\n        // Done:    (none)\r\n        // Undone:  (none)\r\n\r\n        // Perform 'Do' operation of event #1 and\r\n        // use resulting event as next event to undo.\r\n        // Empty undone events.\r\n        history = history.Do(new Event(1));\r\n\r\n        // Current history:\r\n        // Done:    #1\r\n        // Undone:  (none)\r\n\r\n        // Perform 'Do' operation of event #2 and\r\n        // use resulting event as next event to undo.\r\n        // Empty undone events.\r\n        history = history.Do(new Event(2));\r\n\r\n        // Current history:\r\n        // Done:    #2 -> #1\r\n        // Undone:  (none)\r\n\r\n        // Perform 'Do' operation of event #3 and\r\n        // use resulting event as next event to undo.\r\n        // Empty undone events.\r\n        history = history.Do(new Event(3));\r\n\r\n        // Current history:\r\n        // Done:    #3 -> #2 -> #1\r\n        // Undone:  (none)\r\n\r\n        // Perform 'Undo' operation of event #3 and\r\n        // use resulting event as next event to redo.\r\n        history = history.Undo();\r\n\r\n        // Current history:\r\n        // Done:    #2 -> #1\r\n        // Undone:  #3\r\n\r\n        // Perform 'Undo' operation of event #2 and\r\n        // use resulting event as next event to redo.\r\n        history = history.Undo();\r\n\r\n        // Current history:\r\n        // Done:    #1\r\n        // Undone:  #2 -> #3\r\n\r\n        // Perform 'Do' operation of event #2 and\r\n        // use resulting event as next event to undo.\r\n        history = history.Redo();\r\n\r\n        // Current history:\r\n        // Done:    #2 -> #1\r\n        // Undone:  #3\r\n\r\n        // Perform 'Do' operation of event #4 and \r\n        // use resulting event as next event to undo.\r\n        // Empties undone events.\r\n        history = history.Do(new Event(4));\r\n\r\n        // Current history:\r\n        // Done:    #4 -> #2 -> #1\r\n        // Undone:  (none)\r\n\r\n        Console.ReadLine();\r\n    }\r\n\r\n    // Console output:\r\n    Do   event #1 (total 'Do': 1 | total 'Undo': 0)\r\n    Do   event #2 (total 'Do': 1 | total 'Undo': 0)\r\n    Do   event #3 (total 'Do': 1 | total 'Undo': 0)\r\n    Undo event #3 (total 'Do': 1 | total 'Undo': 1)\r\n    Undo event #2 (total 'Do': 1 | total 'Undo': 1)\r\n    Do   event #2 (total 'Do': 2 | total 'Undo': 1)\r\n    Do   event #4 (total 'Do': 1 | total 'Undo': 0)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}